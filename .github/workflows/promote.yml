name: Promote
run-name: "🎉 CD: Promoting Green to Production (${{ inputs.ref }})"
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      s3_bucket_hostname:
        required: true
        type: string
    outputs:
      website_url: 
        value: ${{ jobs.promote.outputs.website_url }}
      previous_ref:
        value: ${{ jobs.previous.outputs.ref }}
        
jobs:
  previous:
    #This one is tricky, since the first time you run it, there is no blue.
    name: 🎟️ Get Previous Blue Ref
    runs-on: ubuntu-latest
    outputs:
      ref: ${{steps.commit.outputs.hash}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Previous Blue Version
        id: previous
        uses: digital-ai/query-tag-action@v2
        # uses: jimschubert/query-tag-action@v1
        with:
          include: 'blue/*'          
        
      - name: Checkout Tag
        uses: actions/checkout@v4
        with:
          ref: ${{steps.previous.outputs.tag}}

      - name: Get Commit Hash
        id: commit
        run: |
          echo "Tag: ${{steps.previous.outputs.tag}}"
          commit=$(git rev-parse HEAD)
          echo "Previous Commit: $commit"
          echo "hash=$commit" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  promote:
    name: 🚀 Switch Router from Blue to Green
    runs-on: ubuntu-latest
    needs: [previous]
    environment:
      name: Blue Frontend
      url: ${{ steps.router.outputs.website_url }}
    outputs:
      website_url: ${{ steps.router.outputs.website_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Use Production Workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: util/terraform/router
          workspace: anyhasher-production

      # - name: Simulate an error
      #  run: exit 1

      - name: Switch the Router
        uses: dflook/terraform-apply@v1
        with:
          workspace: anyhasher-production
          auto_approve: true
          path: util/terraform/router
          variables: |
            s3_bucket_hostname = "${{ inputs.s3_bucket_hostname }}"
            origin_id = "${{ inputs.s3_bucket_hostname }}"

      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: router
        with:
          path: util/terraform/router

  release:
    name: 🚛 Create New Blue Release
    runs-on: ubuntu-latest
    needs: [promote]
    steps:
      - name: Get Backend Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact-${{ inputs.ref }}
          path: backend/build/
        
      - name: Get Frontend Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-release-${{ inputs.ref }}
          path: frontend/build
        
      - name: Tag Green as New Blue
        if: success()
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "blue/${{ inputs.ref }}"
          prerelease: false
          title: "Latest Production Release"
          files: |
            frontend-release-${{ inputs.ref }}.zip
            backend-artifact-${{ inputs.ref }}.zip
